"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.assert = assert;
exports.call = call;
exports.emptyDispatch = emptyDispatch;

function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function assert(assertion, message) {
  if (!assertion) {
    throw new Error(message);
  }
}

var IdGenerator = exports.IdGenerator = function () {
  function IdGenerator() {
    _classCallCheck(this, IdGenerator);

    this.counter = 0;
  }

  _createClass(IdGenerator, [{
    key: "next",
    value: function next() {
      this.counter += 1;
      return "#" + this.counter;
    }
  }]);

  return IdGenerator;
}();

function call(list) {
  var fn = list[0];
  var args = list.slice(1);
  return fn.apply(undefined, _toConsumableArray(args));
}

var defaultOnAbort = exports.defaultOnAbort = [function () {
  return function () {
    return undefined;
  };
}];
function emptyDispatch() {
  // do nothing
}